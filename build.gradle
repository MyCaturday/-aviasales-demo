// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext.versions = [

            kotlin_version   : "1.3.72",
            dagger_version   : '2.28.1',
            moxy_version     : "2.1.2",
            rxjava_version   : "2.2.10",
            rxandroid_version: "2.1.0",
            rxbinding_version: "2.2.0",
            rxkotlin_version : "2.4.0",
            retrofit_version : '2.9.0',
            okhttp_version   : '4.7.2',
            material_version : "1.1.0",
            appcompat_version: "1.1.0",
            recyclerview_version :'1.1.0',
            cardview_version : "1.0.0",
            coordinator_layout_version : "1.1.0",
            constraint_layout_version : "1.1.3",
            corectx_version  : '1.3.0',
            cicerone_version : "5.1.1",
            maps_version     : "17.0.0",
            maps_utils_version: "2.0.3",
            alerter_version: "6.1.0",
            junit_version    : "4.13",
            assertj_version  : "3.16.1",
            mockito_version  : "2.11.0"
    ]

    ext.kotlinStdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin_version"

    ext.dagger = [
            dagger: "com.google.dagger:dagger:$versions.dagger_version",
            compiler: "com.google.dagger:dagger-compiler:$versions.dagger_version"
    ]

    ext.moxy = [
            moxy: "com.github.moxy-community:moxy:$versions.moxy_version",
            androidx: "com.github.moxy-community:moxy-androidx:$versions.moxy_version",
            compiler: "com.github.moxy-community:moxy-compiler:$versions.moxy_version"
    ]

    ext.rxjava2 = [
            rxjava: "io.reactivex.rxjava2:rxjava:$versions.rxjava_version",
            rxkotlin: "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin_version",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$versions.rxandroid_version",
            rxBinding: "com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding_version",
    ]

    ext.squareup = [
            retrofit2: "com.squareup.retrofit2:retrofit:$versions.retrofit_version",
            gson: "com.squareup.retrofit2:converter-gson:$versions.retrofit_version",
            rxjava2adapter: "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit_version",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_version"
    ]

    ext.androidx = [

            appCompat: "androidx.appcompat:appcompat:$versions.appcompat_version",
            design: "com.google.android.material:material:$versions.material_version",
            corectx: "androidx.core:core-ktx:$versions.corectx_version",
            recyclerView: "androidx.recyclerview:recyclerview:$versions.recyclerview_version",
            cardView: "androidx.cardview:cardview:$versions.cardview_version",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$versions.constraint_layout_version",
            coordinatorLayout: "androidx.coordinatorlayout:coordinatorlayout:$versions.coordinator_layout_version"
    ]

    ext.cicerone = "ru.terrakok.cicerone:cicerone:$versions.cicerone_version"

    ext.maps = "com.google.android.gms:play-services-maps:$versions.maps_version"
    ext.mapsUtils = "com.google.maps.android:android-maps-utils:$versions.maps_utils_version"

    ext.alerter = "com.tapadoo.android:alerter:$versions.alerter_version"

    ext.junit = [

            junit: "junit:junit:$versions.junit_version",
            assertJ: "org.assertj:assertj-core:$versions.assertj_version"
    ]

    ext.mockito = "org.mockito:mockito-core:$versions.mockito_version"

    ext.aviasales_demo_core = ":aviasales-demo-core"

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}